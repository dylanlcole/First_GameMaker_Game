<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sEnemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = 0
image_speed = 10/room_speed
InitializeEnemyCollision(100, random(360))
ThingsEaten = 0
image_xscale = 0.5
image_yscale = image_xscale

image_alpha = 0.5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Eat Glob */
DetectionRange = 400
EatRange = 10

NearestGlob = instance_nearest(x,y,oGlob)
if instance_exists(NearestGlob) {
    DistanceToGlob = point_distance(x,y,NearestGlob.x, NearestGlob.y)
    //can I smell?
    if  DistanceToGlob &lt; DetectionRange {
        //can I get there?
        if IHaveLineOfSightTo(NearestGlob) {
            direction = point_direction(x,y,NearestGlob.x, NearestGlob.y)
            //close enough to eat
            if DistanceToGlob &lt; EatRange {
            
                if instance_exists(NearestGlob.Host) {
                    NearestGlob.Host.Eater = id
                    ThingsEaten = ThingsEaten + 1
                    GrowthRate = 0.35
                    MaximumSize = 2
                    if image_xscale &lt; MaximumSize {
                        image_xscale = image_xscale + GrowthRate
                        image_yscale = image_yscale + GrowthRate
                        if place_meeting(x,y, oSolid) {
                            image_xscale = image_xscale - GrowthRate
                            image_yscale = image_yscale - GrowthRate
                        }
                    }
                }
                with NearestGlob { instance_destroy() }
                
            }
        }
    
    }

}

/* Facing */
image_angle = direction

/* Bouncing */
StayInsideRoom()
EnemyCollisionWithSolids()

/* Damage */

if HitByProjectile() { 

    //if swamer inside of us we explode
    if ThingsEaten &gt; 2 {
        i = 0
        while i &lt; ThingsEaten {
            instance_create(x,y,oPowerUp)
            i = i + 1
        }
    
        instance_destroy()
    }

}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
